Geographic Aggregation Tool (GAT) v1.4 (Release date: 2019-12-11)

==============


All changes in this version by Abigail Stamm.

Changes to add to change log:

* Pre-loaded mapdata when loading settings to allow changes in settings.
* Fixed a bug where the rate dialog incorrectly triggered quit.
* Added code to force merging only to adjacent areas.
* Reorganized and recolored some map layers.



Changes:

* Split technical notes and troubleshooting vignettes.
* Summarized change list for the official cahnge log and added this list to
  .Rbuildignore.
* Revised the license and sent it to Seema for feedback.
* Added code to save R settings after GAT completes and restore them for a
  new session.
* Removed identifyGATaggregator(), runGATprogram(), and confirmGATlist() as
  they are now obsolete, and renamed runGATaggregatorscombined() to
  runGATprogram().
* Renamed inputGATmergepop() to inputGATmerge().
* Revised defineGATmerge() to incorporate maximum values and added default
  value calculations in runGATaggregatorscombined().
* Revised runGATaggregatorscombined() to read in existing values when
  revisiting previously completed steps.
* Added an embedded numformat() function to handle converting and printing
  numeric values, especially for the map functions.
* Fixed a bug to disallow shapefiles and exclusion selections that result in
  fewer than 2 polygons. User now gets a dialog requesting new selections.
* Revised runGATaggregatorscombined(), inputGAT*(), and identifyGAT*()
  functions to read in predefined values in steps 1-5.
* Put "Instructions" in bold for all dialogs that contain instructions.
* Added a flag to runGATaggregatorscombined() to identify whether the
  confirmation dialog has been triggered, and modified relevant steps to
  incorporate identifyGATaggregators() and confirmGATbystep().
* Modified identifyGATaggregators() to read inputGATaggregators().
* Modified confirmGATbystep() to provide a list to select a step to modify.
* Added function inputGATaggregators() to combine aggregation variable
  requests into one dialog and add the possibility of maximum values.
* Cloned the following functions:
    * confirmGATlist() to confirmGATbystep()
    * runGATprogram() to runGATaggregatorscombined()
    * identifyGATaggregator() to identifyGATaggregators()
* Added the "tibble" package as a dependency.
* Added variable and centroid information to the log.
* Cloned the GAT manual and started drafting a default version for basic users.
* Added population file details to confirmGATlist().
* Renamed GAT-created variables to start with GAT* and listed them in the log.
* Fixed quit error when clicking "back" in identifyGATpopulation().
* Removed code that added extra GATpop variable.
* Added options directly to runGATprogram() to override defaults for rate and
  ratio denominators and population weighting complexity.
* Removed the now obsolete inputGATmerge().
* Revised creatGATregion() to include an option for level of thoroughness
  to use when population weighting.
* Added a note to the merge dialog that population weighting requires a
  shapefile and modified the code to read in that shapefile, in
  locateGATshapefile(), so it pre-selects the shapefile to aggregate.
* Revised weightGATmap() and weightGATregion() to identify UTM coordinates
  on the fly.
* Created a new function, convertlatlong2UTM(), to handle shifts from scalar
  to planar coordinate systems.
* Revised createGATregion() to increase versatility when used outside GAT.
* Added centroid type to log, confirmation dialog, and maps.
* Rewrote population weighting functions to use sf instead of sp packages.
* Revised code to locate package install location in relevant functions.
* Moved the sum of flagged areas (flagsum) to exclist for writeGATlog().
* Created functions calculateGATexclusions() and calculateGATflag() to clean
  up the exclusion code.
* Added excluded areas to the writeGATlog() and fixed exclusion code in
  confirmGATlist(). Added code to create a flag varible in temp$mapdata.
* Added code to handle small numbers of categories (less than 4) for
  choropleth maps in defineGATmapclasses().
* Fixed an issue where negative values were not recognized for exclusion and
  aggregator minimums.
* Added code to continue naming from GAT's old IDs when reading in GAT-created
  shapefiles.
* Fixed a broken function call in inputGATmerge().
* Fixed the issue with names in GAT-created shapefiles causing GAT to fail.
  However, this fix broke the code to use pre-defined flags.
* Added function weightGATsf() to test population weighting within the package,
  but have not integrated it into default GAT yet.
* Added functions calculateGATflag() and calculateGATexclusions() to clean up
  exclusion code and added an exclusion check prior to asking for merge and
  rate denominators, so excluded areas are ignored when checking for 0.
* Modified the map legends to add more space between labels.
* Fixed a bug in locateGATshapefile() where filepaths containing a period were
  truncated prematurely.
* Added a new function, confirmGATquit(), which creates a confirmation dialog
  asking if the user wants to cancel GAT when the user clicks the upper right
  "x" for all dialog boxes.
* Revised inputGATvariable() to include options for a checkbox and/or text
  box beside the variable list.
* Rewrote minimum value and rate multiplier checks to allow only digits,
  commas, and periods and run inputGATvalue() if they fail.
* Rewrote saveGATkml() and confirmGATmessage() to read inputGATmessage().
* Created a new function, inputGATmessage(), to handle messages to the user.
  This dialog includes "help", "cancel", and "back" options.
* Rewrote identifyGATaggregator() to request the minimum value
  (default "5,000") at the same time as the variable name.
* Rewrote inputGATvariable() to allow a value and/or a checkbox in addition
  to the list.
* Fixed inconsistencies in writeGATlog() regarding boundaries and minimums.
* Added a function, inputGATexclusions(), to allow user to specify criteria
  for areas that should not be merged. Modified log, confirmation, merging,
  and map functions to include exclusions.
* Added a new function, showGAThelp(), to handle the new help dialog that
  replaces the original HTML pages.
* Fixed minor bugs and optimized code in Step 9, rate settings selection.
* Cloned new function, confirmGATlist(), from confirmGATmessage() to provide
  the settings confirmation message in list form.
* Fixed minor bugs in writeGATlog().
* Added a new function, defineGATmapclasses(), which fixes the error where
  the "after" classes are redefined if there are fewer areas than classes+1.
* Revised functions to remove svDialogs due to odd behavior with RStudio.
  Replaced all instances of svDialogs with tcltk::tkmessageBox().
* Revised several help buttons to open an infobox and the GAT manual through
  the package rather than the individual files.
* Added comma format for large numbers in plotGATcompare(), runGATprogram(),
  and confirmGATmessage().
* Added the rate calculation to the rate map as a subtitle in runGATprogram().
* Added a legend, changed the title, and added a subtitle that provides
  details on the merge type and variables used in plotGATcompare().
* Added a new shapefile example, hhtract, to demonstrate mergeGATbyarea().
* Revised inputGATrate() to allow user to choose whether to include variables
  with zeroes and missings in the denominator.
* Revised identifyGATboundary() to allow user to require that GAT honors
  large area borders and revised inputGATvariable() to allow a checkbox
  option if the user desires.
* Added gatpkg.R to define ?gatpkg.
* Added \dontrun{} to several interactive examples to speed up testing.
* Renamed createnewGATregion() to createGATregion() and added code to
  calculate population weighted centroids.
* Added functions weightGATregion()and importGATweights() to handle
  population weighting.
* Combined mergeGAT*() functions to create defineGATmerge(), then renamed
  finalizeGATmerge() to mergeGATareas().
* Added a new shapefile, hfblock, to illustrate population weighting.
* Revised and added more settings to writeGATlog().
* Added the following functionality to plotGATmaps():
    * highlight areas with totals below the aggregation minimum
    * plot invalid rates as grey
    * round off decimals in the legend for rates and compactness ratios
    * print summary stats (min, median, max) in the upper right corner
* Revised runGATprogram() to reorder maps and force the same breakpoints and
  colors for both before and after maps.
* Revised plotGATmaps to allow polygon color assignments to be entered directly
  and updated default values for most options.
* Revised map functions to increase font size and added subtitles for "After"
  maps that note minimum aggregation values.
* Added rate and file information to the log.
* Renamed identifyGATminaggvalue() to identifyGATvalue() to generalize it for
  both maximum and minimum values.
* Created finalizeGATmerge() to process the final aggregated shapefile after
  the polygons to be merged are identified in mergeGATpolygons().
* Wrote drafts for four vignettes to document different aspects of GAT and
  added images to several functions' help pages.
* At Gwen's request, commented out the dev.off() commands in the mapping
  functions so that the maps remain open. They are still written to PDF.
* Re-ordered the code in runGATprogram() to put all mapping steps together
  and all file saving steps together.
* Cleaned up the denominator code for rate and similar sections, and removed
  "NONE" from the otions.
* Cloned mergeGATpolgons() to create mergeGATbyarea(), which enforces county
  boundaries.
* Added the function runGATprogram(), which handles nearly all of the code.
* Reordered details of the log in writeGATlog() and added more details for
  the settings, merge type, and if/where the kml file was saved.
* Fixed an error in saveGATfiles() that prevented any file extensions
  from being dropped from the filename.
* Revised code for ID and denominator variable lists to remove invalid
  variables (for denominator, those containing 0 and for ID, those
  containing non-unique values). Also added code to create an ID variable
  if none exists.
* Revised mergeGATpolygons() to delete the function-specific progress bar
  (if created) at the end of the function.
* Rewrote quit() functionality in relevant functions (mostly inputGAT*()
  functions) to create a warning dialog and send a flag to the user's
  script instead of crashing the program, so the user can decide how to
  handle it, and rewrote the script so that triggering the flag skips the
  user to the bottom of the script.
* Rewrote combobox code in inputGATrate() to address errors when compiling
  the package.
* Renamed gatInput() to the more explicit inputGATvalue() and gatgui() to
  the more explicit inputGATvariable().
* Rewrote locateGATshapefile() to return a list instead of a string.
* Rewrote several function calls to read in lists instead of individual
  objects and improved documentation on what the lists should contain.
* Rewrote several spatial polygons objects to reduce clutter, keep only
  spatial polygons dataframes, and make their names explicit.
* Created function mergeGATpolygons() to handle the aggregation code.
* Renamed mergeGATdistance() to the more accurate rankGATdistance().
* Combined compactnessratio() and verifymapprojection() into a new
  function, calculateGATcompactness(), and improved functionality.
* Collapsed plotGATafter(), plotGATcompactness(), and plotGATrate() into
  plotGATmaps(), improved functionality, and cleaned up code.
* Rewrote most code to be consistent with 80 characters per line.
* Rewrote function calls to reference packages when called, instead of
  loading the packages beforehand.
* Changed package loading code for tcltk2 to install only if the package is
  not already installed.
* Added code to check if the new shapefile was successfully written and
  inform the user if it was not.
* Recoded GAT-assigned ID numbers to have uniform and dynamic length.
* Added code to check whether the shapefile contains polygons and detailed
  messaging to inform the user if an invalid shapefile is selected.
* Renamed several functions to begin with verbs and include the tag 'GAT'
  and merged the two identifyGATaggregator() functions into one.
* Created the function saveGATfiles().
* Changed the save file dialog from svDialogs::dlgSave() to
  tcltk2::tkgetSaveFile() to remove "file doesn't exist" errors in base R.
* Moved the save file dialog from the end of the program to the user input
  section so the program will complete if you leave it running.
* Fixed the bug that loses variable names between selecting the first and
  second aggregation variables. This also fixed the first aggregation
  variable not showing up in merge and rate variable lists.
* In identifyGATminaggvalue(), set default value to the maximum value for
  the aggregation variable.
* Added a rate confirmation dialog. Answering "no" returns the user to the
  rate selection box.
* Added a progress bar for package installs.
* Fixed minor issues with writeGATlog(), rewrote function calls to identify
  all options explicitly, and added missing (previously global) options to
  several functions.
* Reorganized individual variables into themed lists to reduce clutter.
* Pulled more code into functions, creating:
    * verifymapprojection(),
    * identifyfirstobs(),
    * compactnessRatio(),
    * createnewregion(),
    * mergedistance().
* Wrote writeGATkml() to use plotKML and added description field.
* Stored Gwen's legacy kml code in writeGwenkml() - depreciated and slow,
  but functional.
* Added dialog at Doug's request to ask if a kml file should be created.
* Wrote functions writeGATkml() and writeGATlog() to handle file creation.
* Created a list to store plots to write to PDF and pulled code to create
  plots into functions, creating:
    * plotGATafter(),
    * plotGATcompactness(),
    * plotGATcompare(),
    * plotGATmaps(),
    * plotGATrate().
* Converted program to package to improve readability and reproducability.
* Added loadpackagelist() function with dialog to confirm package install.
* Rewrote gatInput(), gatrateInput(), and gatgui() functions to be compliant
  with tcltk2.
* When user cancels a query, changed code to open a quit confirmed dialog
  instead of crashing R. Specifically, in onCancel(), quit() changed to
  dlgMessage(). Cancelling quit() does not crash R.
* Added white space and formatting fixes to improve code readability.
* Simplified confirmation message code.
* Converted several large chunks of code in Gwen's while() loop to separate
  functions, creating:
    * checkGATidentifier(),
    * checkGATshapefilesize(),
    * checkGATvariabletype(),
    * mergeGATInput(),
    * confirmGATmessage(),
    * identifyGATaggregator(),
    * identifyGATaggregator2(),
    * identifyGATboundary(),
    * identifyGATminaggvalue(),
    * identifyGATshapefileid(),
    * locateGATshapefile().
* Added an incremental progress bar that updates as the program runs.




Geographic Aggregation Tool (GAT) v1.34 (Release date: 2015-08-28)
==============

All changes to the GAT code prior to converting it to a package are listed in
the GAT Change Log, accessible via this code:
  vignette("gat_changelog", package = "gatpkg")

